"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å 10 –Ω–∞ 5 –º–∏–Ω—É—Ç
"""

import asyncio
from database import db
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)


async def update_reservation_time():
    """–û–±–Ω–æ–≤–∏—Ç—å –≤—Ä–µ–º—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    
    await db.create_pool()
    
    logger.info("üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    # –ò–∑–º–µ–Ω—è–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö —Ä–µ–∑–µ—Ä–≤–æ–≤
    try:
        await db.execute("""
            ALTER TABLE order_reservations 
            ALTER COLUMN reserved_until 
            SET DEFAULT CURRENT_TIMESTAMP + INTERVAL '5 minutes'
        """)
        logger.info("‚úÖ –î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –≤—Ä–µ–º—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ 5 –º–∏–Ω—É—Ç")
    except Exception as e:
        logger.warning(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å –¥–µ—Ñ–æ–ª—Ç (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –∏–∑–º–µ–Ω–µ–Ω): {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã
    active_reserves = await db.fetchall("""
        SELECT 
            order_id,
            EXTRACT(EPOCH FROM (reserved_until - CURRENT_TIMESTAMP))/60 as minutes_left
        FROM order_reservations 
        WHERE reserved_until > CURRENT_TIMESTAMP
    """)
    
    if active_reserves:
        logger.info(f"üìã –ù–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–æ–≤: {len(active_reserves)}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã
        await db.execute("""
            UPDATE order_reservations 
            SET reserved_until = CURRENT_TIMESTAMP + INTERVAL '5 minutes'
            WHERE reserved_until > CURRENT_TIMESTAMP
        """)
        
        logger.info("‚úÖ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ 5 –º–∏–Ω—É—Ç")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã
        updated_reserves = await db.fetchall("""
            SELECT 
                order_id,
                EXTRACT(EPOCH FROM (reserved_until - CURRENT_TIMESTAMP))/60 as minutes_left
            FROM order_reservations 
            WHERE reserved_until > CURRENT_TIMESTAMP
        """)
        
        for reserve in updated_reserves:
            logger.info(f"  –ó–∞–∫–∞–∑ #{reserve['order_id']}: {reserve['minutes_left']:.1f} –º–∏–Ω—É—Ç")
    else:
        logger.info("üìã –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    logger.info("‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    
    await db.close_pool()


if __name__ == "__main__":
    asyncio.run(update_reservation_time())