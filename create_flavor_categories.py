#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤–∫—É—Å–æ–≤ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
"""

import asyncio
import asyncpg
from config import DATABASE_URL


async def create_flavor_categories():
    """–°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤–∫—É—Å–æ–≤ –∏ –¥–æ–±–∞–≤–∏—Ç—å –±–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    
    # SQL –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∏ –±–∞–∑–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    sql_script = """
    -- –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤–∫—É—Å–æ–≤
    CREATE TABLE IF NOT EXISTS flavor_categories (
        id SERIAL PRIMARY KEY,
        name VARCHAR(100) NOT NULL UNIQUE,
        emoji VARCHAR(10) DEFAULT '',
        description TEXT DEFAULT '',
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
    CREATE OR REPLACE FUNCTION update_updated_at_column()
    RETURNS TRIGGER AS $$
    BEGIN
        NEW.updated_at = CURRENT_TIMESTAMP;
        RETURN NEW;
    END;
    $$ language 'plpgsql';

    -- –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∏–≥–≥–µ—Ä–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
    DROP TRIGGER IF EXISTS update_flavor_categories_updated_at ON flavor_categories;
    CREATE TRIGGER update_flavor_categories_updated_at
        BEFORE UPDATE ON flavor_categories
        FOR EACH ROW
        EXECUTE FUNCTION update_updated_at_column();
    """
    
    # –ë–∞–∑–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–∫—É—Å–æ–≤
    flavor_categories = [
        ('–Ø–≥–æ–¥–Ω—ã–µ', 'üçì', '–ö–ª—É–±–Ω–∏–∫–∞, –º–∞–ª–∏–Ω–∞, —á–µ—Ä–Ω–∏–∫–∞ –∏ –¥—Ä—É–≥–∏–µ —è–≥–æ–¥–Ω—ã–µ –≤–∫—É—Å—ã'),
        ('–ú–µ–Ω—Ç–æ–ª/–õ–µ–¥', '‚ùÑÔ∏è', '–ú–µ–Ω—Ç–æ–ª–æ–≤—ã–µ –∏ –æ—Å–≤–µ–∂–∞—é—â–∏–µ –≤–∫—É—Å—ã —Å –æ—Ö–ª–∞–∂–¥–∞—é—â–∏–º —ç—Ñ—Ñ–µ–∫—Ç–æ–º'),
        ('–¶–∏—Ç—Ä—É—Å—ã', 'üçä', '–õ–∏–º–æ–Ω, –∞–ø–µ–ª—å—Å–∏–Ω, –≥—Ä–µ–π–ø—Ñ—Ä—É—Ç –∏ –¥—Ä—É–≥–∏–µ —Ü–∏—Ç—Ä—É—Å–æ–≤—ã–µ'),
        ('–≠–∫–∑–æ—Ç–∏–∫–∞', 'ü•≠', '–ú–∞–Ω–≥–æ, –º–∞—Ä–∞–∫—É–π—è, –∫–∏–≤–∏ –∏ –¥—Ä—É–≥–∏–µ —ç–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–µ —Ñ—Ä—É–∫—Ç—ã'),
        ('–°–ª–∞–¥–∫–∏–µ', 'üç∞', '–î–µ—Å–µ—Ä—Ç–Ω—ã–µ –∏ —Å–ª–∞–¥–∫–∏–µ –≤–∫—É—Å—ã: —Ç–æ—Ä—Ç—ã, –∫–æ–Ω—Ñ–µ—Ç—ã, –º–æ—Ä–æ–∂–µ–Ω–æ–µ')
    ]
    
    try:
        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = await asyncpg.connect(DATABASE_URL)
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
        
        # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∏ —Ñ—É–Ω–∫—Ü–∏–π
        await conn.execute(sql_script)
        print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ flavor_categories —Å–æ–∑–¥–∞–Ω–∞")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–æ–≤—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        for name, emoji, description in flavor_categories:
            try:
                await conn.execute(
                    "INSERT INTO flavor_categories (name, emoji, description) VALUES ($1, $2, $3)",
                    name, emoji, description
                )
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {emoji} {name}")
            except asyncpg.UniqueViolationError:
                print(f"‚ö†Ô∏è  –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {emoji} {name}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = await conn.fetch("SELECT * FROM flavor_categories ORDER BY id")
        print(f"\nüìã –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ: {len(categories)}")
        for cat in categories:
            print(f"   {cat['id']}. {cat['emoji']} {cat['name']}")
        
        await conn.close()
        print("\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü—ã: {e}")
        raise


if __name__ == "__main__":
    asyncio.run(create_flavor_categories())