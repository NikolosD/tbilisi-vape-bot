"""
–û—Ç–ª–∞–¥–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤—Ä–µ–º–µ–Ω–µ–º —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import asyncio
from datetime import datetime, timezone
from database import db, init_db

async def debug_reservation_time():
    """–û—Ç–ª–∞–¥–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    await init_db()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –±–∞–∑–µ –∏ Python
    db_time_result = await db.fetchone("SELECT CURRENT_TIMESTAMP as db_time")
    db_time = db_time_result['db_time']
    python_time = datetime.now()
    
    print(f"üïê –í—Ä–µ–º—è –≤ PostgreSQL: {db_time}")
    print(f"üïê –í—Ä–µ–º—è –≤ Python: {python_time}")
    print(f"üïê –†–∞–∑–Ω–∏—Ü–∞: {(python_time - db_time.replace(tzinfo=None)).total_seconds()} —Å–µ–∫—É–Ω–¥")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã
    active_reservations = await db.fetchall("""
        SELECT user_id, product_id, quantity, reserved_until, 
               EXTRACT(EPOCH FROM (reserved_until - CURRENT_TIMESTAMP))/60 as minutes_left
        FROM cart 
        WHERE reserved_until > CURRENT_TIMESTAMP
    """)
    
    print(f"\nüìã –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—ã: {len(active_reservations)}")
    for res in active_reservations:
        print(f"  User {res['user_id']}: –ø—Ä–æ–¥—É–∫—Ç {res['product_id']}, "
              f"–∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {res['minutes_left']:.1f} –º–∏–Ω ({res['reserved_until']})")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ä–µ–∑–µ—Ä–≤—ã (–≤–∫–ª—é—á–∞—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ)
    all_reservations = await db.fetchall("""
        SELECT user_id, product_id, quantity, reserved_until,
               EXTRACT(EPOCH FROM (reserved_until - CURRENT_TIMESTAMP))/60 as minutes_left
        FROM cart
    """)
    
    print(f"\nüìã –í—Å–µ —Ä–µ–∑–µ—Ä–≤—ã (–≤–∫–ª—é—á–∞—è –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ): {len(all_reservations)}")
    for res in all_reservations:
        status = "–∞–∫—Ç–∏–≤–Ω—ã–π" if res['minutes_left'] > 0 else "–ø—Ä–æ—Å—Ä–æ—á–µ–Ω"
        print(f"  User {res['user_id']}: –ø—Ä–æ–¥—É–∫—Ç {res['product_id']}, "
              f"{res['minutes_left']:.1f} –º–∏–Ω ({status}) - {res['reserved_until']}")
    
    await db.close_pool()

if __name__ == "__main__":
    asyncio.run(debug_reservation_time())