#!/usr/bin/env python3
"""
–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ç–µ—Ä–Ω–∞—Ü–∏–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ (i18n) –¥–ª—è –±–æ—Ç–∞
"""
import json
import os
from typing import Dict, Any

class I18n:
    def __init__(self, default_language: str = "ru"):
        self.default_language = default_language
        self.translations: Dict[str, Dict[str, Any]] = {}
        self.current_language = default_language
        self.user_languages: Dict[int, str] = {}  # user_id -> language
        self.load_translations()
    
    def load_translations(self):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã –∏–∑ —Ñ–∞–π–ª–æ–≤"""
        translations_dir = "translations"
        
        if not os.path.exists(translations_dir):
            os.makedirs(translations_dir)
            # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª —Å —Ä—É—Å—Å–∫–∏–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏
            self.create_default_translations()
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤
        for filename in os.listdir(translations_dir):
            if filename.endswith('.json'):
                language = filename[:-5]  # —É–±–∏—Ä–∞–µ–º .json
                filepath = os.path.join(translations_dir, filename)
                
                try:
                    with open(filepath, 'r', encoding='utf-8') as f:
                        self.translations[language] = json.load(f)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è {language}: {e}")
    
    def create_default_translations(self):
        """–°–æ–∑–¥–∞—Ç—å —Ñ–∞–π–ª —Å —Ä—É—Å—Å–∫–∏–º–∏ –ø–µ—Ä–µ–≤–æ–¥–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"""
        default_translations = {
            # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            "menu": {
                "catalog": "üõç –ö–∞—Ç–∞–ª–æ–≥",
                "cart": "üõí –ö–æ—Ä–∑–∏–Ω–∞", 
                "orders": "üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã",
                "contact": "üí¨ –°–≤—è–∑—å",
                "info": "‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
                "admin_panel": "üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"
            },
            
            # –ö–∞—Ç–∞–ª–æ–≥
            "catalog": {
                "title": "üõç <b>–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</b>",
                "select_category": "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
                "select_product": "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:",
                "empty": "üì¶ –ö–∞—Ç–∞–ª–æ–≥ –ø–æ–∫–∞ –ø—É—Å—Ç. –°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º —Ç–æ–≤–∞—Ä—ã!",
                "category_empty": "üì¶ –í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤"
            },
            
            # –¢–æ–≤–∞—Ä
            "product": {
                "price": "üí∞ –¶–µ–Ω–∞: {price}‚Çæ",
                "description": "üìù –û–ø–∏—Å–∞–Ω–∏–µ:",
                "in_cart": "üõí –¢–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ",
                "add_to_cart": "üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É",
                "remove_from_cart": "‚ùå –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã",
                "back_to_catalog": "üîô –ö –∫–∞—Ç–∞–ª–æ–≥—É"
            },
            
            # –ö–æ—Ä–∑–∏–Ω–∞
            "cart": {
                "title": "üõí <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞:</b>",
                "empty": "üõí <b>–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</b>\n\n–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞!",
                "item": "‚Ä¢ {name}\n  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity} —à—Ç.\n  –¶–µ–Ω–∞: {price}‚Çæ √ó {quantity} = {total}‚Çæ\n",
                "total": "üí∞ <b>–ò—Ç–æ–≥–æ: {total}‚Çæ</b>",
                "checkout": "üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑",
                "clear": "üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É",
                "back_to_menu": "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                "item_removed": "‚úÖ –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã",
                "item_added": "‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É",
                "quantity_increased": "‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≤–µ–ª–∏—á–µ–Ω–æ –¥–æ {quantity}",
                "quantity_decreased": "‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–º–µ–Ω—å—à–µ–Ω–æ –¥–æ {quantity}",
                "item_deleted": "üóë –¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã"
            },
            
            # –ó–∞–∫–∞–∑—ã
            "orders": {
                "title": "üìã <b>–í–∞—à–∏ –∑–∞–∫–∞–∑—ã:</b>",
                "select_order": "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π:",
                "empty": "üìã <b>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</b>\n\n–°–¥–µ–ª–∞–π—Ç–µ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑!",
                "details": "üìã <b>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ #{order_id}</b>",
                "products": "üõç <b>–¢–æ–≤–∞—Ä—ã:</b>",
                "delivery": "üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b> {zone} - {price}‚Çæ",
                "address": "üìç <b>–ê–¥—Ä–µ—Å:</b> {address}",
                "phone": "üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone}",
                "date": "üìÖ <b>–î–∞—Ç–∞:</b> {date}",
                "total": "üí∞ <b>–ò—Ç–æ–≥–æ: {total}‚Çæ</b>",
                "status": "üìä <b>–°—Ç–∞—Ç—É—Å:</b> {status}",
                "cancel": "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑",
                "canceled": "‚úÖ –ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω",
                "cannot_cancel": "‚ùå –ó–∞–∫–∞–∑ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å"
            },
            
            # –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
            "checkout": {
                "delivery_zones": "üöö <b>–í—ã–±–µ—Ä–∏—Ç–µ –∑–æ–Ω—É –¥–æ—Å—Ç–∞–≤–∫–∏:</b>",
                "zone_info": "üöö <b>–ó–æ–Ω–∞:</b> {name}\nüí∞ <b>–°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏:</b> {price}‚Çæ\n‚è± <b>–í—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏:</b> {time}",
                "enter_address": "–ù–∞–ø–∏—à–∏—Ç–µ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:",
                "contact_request": "üì± <b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</b>\n\n–ü–æ–¥–µ–ª–∏—Ç–µ—Å—å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Å–≤—è–∑–∏:",
                "order_created": "‚úÖ <b>–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω!</b>\n\nüìã <b>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞:</b> #{order_id}\nüí∞ <b>–°—É–º–º–∞ –∫ –æ–ø–ª–∞—Ç–µ:</b> {total}‚Çæ\n\nüí≥ <b>–°–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:</b>\n{payment_info}\n\nüì∏ <b>–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞</b>",
                "order_error": "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑."
            },
            
            # –°–≤—è–∑—å –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            "contact": {
                "title": "üí¨ <b>–°–≤—è–∑—å —Å –Ω–∞–º–∏</b>",
                "description": "‚ùì <b>–ü–æ –≤–æ–ø—Ä–æ—Å–∞–º:</b>\n‚Ä¢ –°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞\n‚Ä¢ –ü–æ–º–æ—â—å —Å –≤—ã–±–æ—Ä–æ–º\n‚Ä¢ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–±–ª–µ–º—ã\n‚Ä¢ –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏ –∂–∞–ª–æ–±—ã\n\n‚ö° <b>–ë—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –≤ —Ä–∞–±–æ—á–µ–µ –≤—Ä–µ–º—è!</b>"
            },
            
            "info": {
                "title": "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–µ</b>",
                "shop_name": "üè™ <b>Tbilisi VAPE Shop</b>\nüá¨üá™ –õ—É—á—à–∏–π –º–∞–≥–∞–∑–∏–Ω –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã—Ö —Å–∏–≥–∞—Ä–µ—Ç –≤ –¢–±–∏–ª–∏—Å–∏",
                "advantages": "‚úÖ <b>–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</b>\n‚Ä¢ –¢–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã\n‚Ä¢ –ë—ã—Å—Ç—Ä–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –ø–æ –¢–±–∏–ª–∏—Å–∏\n‚Ä¢ –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ —Ü–µ–Ω—ã\n‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è",
                "delivery": "üöö <b>–î–æ—Å—Ç–∞–≤–∫–∞:</b>\n‚Ä¢ –ü–æ –≤—Å–µ–º—É –¢–±–∏–ª–∏—Å–∏\n‚Ä¢ –í—Ä–µ–º—è: 30-90 –º–∏–Ω—É—Ç\n‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑: {min_order}‚Çæ",
                "payment": "üí≥ <b>–û–ø–ª–∞—Ç–∞:</b>\n‚Ä¢ –ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏\n‚Ä¢ –ü–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ –∫–∞—Ä—Ç—É\n‚Ä¢ –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π"
            },
            
            # –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
            "admin": {
                "panel": "üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å</b>",
                "products": "üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏",
                "orders": "üìã –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã", 
                "stats": "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                "broadcast": "üì¢ –†–∞—Å—Å—ã–ª–∫–∞",
                "categories": "üè∑Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏",
                "add_product": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä",
                "edit_products": "üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã",
                "add_category": "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é",
                "edit_categories": "üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏",
                "back_to_panel": "üîô –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å",
                "back_to_products": "üîô –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏",
                "back_to_categories": "üîô –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏"
            }
        }
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open("translations/ru.json", 'w', encoding='utf-8') as f:
            json.dump(default_translations, f, ensure_ascii=False, indent=2)
    
    def t(self, key: str, user_id: int = None, **kwargs) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ –ø–æ –∫–ª—é—á—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —è–∑—ã–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        language = self.current_language
        if user_id and user_id in self.user_languages:
            language = self.user_languages[user_id]
        
        keys = key.split('.')
        translation = self.translations.get(language, {})
        
        # –ò—â–µ–º –ø–µ—Ä–µ–≤–æ–¥ –ø–æ –≤–ª–æ–∂–µ–Ω–Ω—ã–º –∫–ª—é—á–∞–º
        for k in keys:
            if isinstance(translation, dict) and k in translation:
                translation = translation[k]
            else:
                # –ï—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä—É—Å—Å–∫–∏–π
                translation = self.translations.get(self.default_language, {})
                for k in keys:
                    if isinstance(translation, dict) and k in translation:
                        translation = translation[k]
                    else:
                        return key  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–ª—é—á, –µ—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω
                break
        
        # –ï—Å–ª–∏ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –µ—ë
        if isinstance(translation, str):
            try:
                return translation.format(**kwargs)
            except KeyError:
                return translation
        
        return str(translation)
    
    def set_language(self, language: str, user_id: int = None):
        """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —è–∑—ã–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ"""
        if language in self.translations:
            if user_id:
                self.user_languages[user_id] = language
            else:
                self.current_language = language
    
    def get_user_language(self, user_id: int) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —è–∑—ã–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        return self.user_languages.get(user_id, self.default_language)

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
i18n = I18n()

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
def _(key: str, user_id: int = None, **kwargs) -> str:
    """–ö–æ—Ä–æ—Ç–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞"""
    return i18n.t(key, user_id=user_id, **kwargs)

