from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
import i18n
from i18n import _

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu(is_admin=False, user_id=None):
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫
    catalog_text = _("menu.catalog", user_id=user_id)
    cart_text = _("menu.cart", user_id=user_id)
    orders_text = _("menu.orders", user_id=user_id)
    contact_text = _("menu.contact", user_id=user_id)
    info_text = _("menu.info", user_id=user_id)
    language_text = _("menu.language", user_id=user_id)
    admin_text = _("menu.admin_panel", user_id=user_id)
    
    keyboard_rows = [
        [KeyboardButton(text=catalog_text), KeyboardButton(text=cart_text)],
        [KeyboardButton(text=orders_text), KeyboardButton(text=contact_text)],
        [KeyboardButton(text=info_text), KeyboardButton(text=language_text)]
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if is_admin:
        keyboard_rows.append([KeyboardButton(text=admin_text)])
    
    keyboard = ReplyKeyboardMarkup(
        keyboard=keyboard_rows,
        resize_keyboard=True,
        persistent=True
    )
    return keyboard

# Inline –≤–µ—Ä—Å–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é (–¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π)
def get_main_menu_inline(is_admin=False, user_id=None):
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–µ–¥–µ–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∫–Ω–æ–ø–æ–∫
    catalog_text = _("menu.catalog", user_id=user_id)
    cart_text = _("menu.cart", user_id=user_id)
    orders_text = _("menu.orders", user_id=user_id)
    contact_text = _("menu.contact", user_id=user_id)
    info_text = _("menu.info", user_id=user_id)
    language_text = _("menu.language", user_id=user_id)
    admin_text = _("menu.admin_panel", user_id=user_id)
    
    keyboard = [
        [InlineKeyboardButton(text=catalog_text, callback_data="catalog")],
        [InlineKeyboardButton(text=cart_text, callback_data="cart")],
        [InlineKeyboardButton(text=orders_text, callback_data="my_orders")],
        [InlineKeyboardButton(text=contact_text, callback_data="contact")],
        [InlineKeyboardButton(text=info_text, callback_data="info")],
        [InlineKeyboardButton(text=language_text, callback_data="language")]
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if is_admin:
        keyboard.append([InlineKeyboardButton(text=admin_text, callback_data="admin_panel")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–∞—Ç–∞–ª–æ–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
def get_categories_keyboard(categories):
    keyboard = []
    for category in categories:
        emoji = category[2] if category[2] else "üì¶"
        keyboard.append([
            InlineKeyboardButton(
                text=f"{emoji} {category[1]}",
                callback_data=f"category_{category[0]}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text=_("common.main_menu"), callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ (inline)
def get_catalog_keyboard(products):
    keyboard = []
    for product in products:
        keyboard.append([
            InlineKeyboardButton(
                text=f"{product[1]} - {product[2]}‚Çæ",
                callback_data=f"product_{product[0]}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text=_("common.to_categories"), callback_data="catalog")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –¢–æ–≤–∞—Ä—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
def get_category_products_keyboard(products, category_id):
    keyboard = []
    for product in products:
        keyboard.append([
            InlineKeyboardButton(
                text=f"{product[1]} - {product[2]}‚Çæ",
                callback_data=f"product_{product[0]}_from_{category_id}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text=_("common.to_categories"), callback_data="catalog")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞
def get_product_card_keyboard(product_id, in_cart=False, from_category=None):
    if in_cart:
        keyboard = [
            [
                InlineKeyboardButton(text="‚ûñ", callback_data=f"cart_decrease_{product_id}"),
                InlineKeyboardButton(text="‚ûï", callback_data=f"cart_increase_{product_id}")
            ],
            [InlineKeyboardButton(text=_("product.remove_from_cart"), callback_data=f"cart_remove_{product_id}")],
            [
                InlineKeyboardButton(text=_("menu.cart"), callback_data="cart"),
                InlineKeyboardButton(text=_("common.back"), callback_data=f"category_{from_category}" if from_category else "catalog")
            ],
            [InlineKeyboardButton(text=_("common.to_catalog"), callback_data="catalog")]
        ]
    else:
        keyboard = [
            [InlineKeyboardButton(text=_("product.add_to_cart"), callback_data=f"add_to_cart_{product_id}")],
            [
                InlineKeyboardButton(text=_("menu.cart"), callback_data="cart"),
                InlineKeyboardButton(text=_("common.back"), callback_data=f"category_{from_category}" if from_category else "catalog")
            ],
            [InlineKeyboardButton(text=_("common.to_catalog"), callback_data="catalog")]
        ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–æ—Ä–∑–∏–Ω–∞
def get_cart_keyboard(cart_items):
    keyboard = []
    
    for item in cart_items:
        product_id = item[0]
        quantity = item[1]
        name = item[2]
        keyboard.append([
            InlineKeyboardButton(text=f"‚ûñ", callback_data=f"cart_decrease_{product_id}"),
            InlineKeyboardButton(text=f"{name} ({quantity})", callback_data=f"product_{product_id}"),
            InlineKeyboardButton(text=f"‚ûï", callback_data=f"cart_increase_{product_id}")
        ])
        keyboard.append([
            InlineKeyboardButton(text=_("common.remove"), callback_data=f"cart_remove_{product_id}")
        ])
    
    if cart_items:
        keyboard.append([InlineKeyboardButton(text=_("cart.checkout"), callback_data="checkout")])
        keyboard.append([InlineKeyboardButton(text=_("cart.clear"), callback_data="clear_cart")])
    
    keyboard.append([InlineKeyboardButton(text=_("common.main_menu"), callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –í—ã–±–æ—Ä –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
def get_delivery_zones_keyboard():
    from config import DELIVERY_ZONES
    keyboard = []
    
    for zone_id, zone_info in DELIVERY_ZONES.items():
        keyboard.append([
            InlineKeyboardButton(
                text=f"{zone_info['name']} - {zone_info['price']}‚Çæ ({zone_info['time']})",
                callback_data=f"delivery_{zone_id}"
            )
        ])
    
    keyboard.append([InlineKeyboardButton(text=_("common.back"), callback_data="cart")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
def get_order_confirmation_keyboard(order_id, user_id=None):
    keyboard = [
        [InlineKeyboardButton(text=_("common.paid", user_id=user_id), callback_data=f"payment_done_{order_id}")],
        [InlineKeyboardButton(text=_("orders.cancel", user_id=user_id), callback_data=f"cancel_order_{order_id}")],
        [InlineKeyboardButton(text=_("common.my_orders", user_id=user_id), callback_data="my_orders")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_orders_keyboard(orders, user_id=None):
    keyboard = []
    
    for order in orders:
        order_id = order[0]
        status = order[8]
        created_at = order[10]
        total = order[3]
        
        status_emoji = {
            'waiting_payment': '‚è≥',
            'payment_check': 'üí∞',
            'paid': '‚úÖ',
            'shipping': 'üöö',
            'delivered': '‚úÖ',
            'cancelled': '‚ùå'
        }
        
        status_text = {
            'waiting_payment': _('status.waiting_payment', user_id=user_id),
            'payment_check': _('status.payment_check', user_id=user_id),
            'paid': _('status.paid', user_id=user_id),
            'shipping': _('status.shipping', user_id=user_id),
            'delivered': _('status.delivered', user_id=user_id),
            'cancelled': _('status.cancelled', user_id=user_id)
        }
        
        keyboard.append([
            InlineKeyboardButton(
                text=f"{status_emoji.get(status, '‚ùì')} " + _("common.order_number", user_id=user_id, order_id=order_id, total=total),
                callback_data=f"order_{order_id}"
            )
        ])
    
    keyboard.append([InlineKeyboardButton(text=_("common.main_menu", user_id=user_id), callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
def get_order_details_keyboard(order_id, status):
    keyboard = []
    
    if status == 'waiting_payment':
        keyboard.append([InlineKeyboardButton(text=_("common.paid"), callback_data=f"payment_done_{order_id}")])
        keyboard.append([InlineKeyboardButton(text=_("common.cancel"), callback_data=f"cancel_order_{order_id}")])
    elif status == 'payment_check':
        keyboard.append([InlineKeyboardButton(text=_("common.resend_screenshot"), callback_data=f"resend_screenshot_{order_id}")])
    
    keyboard.append([InlineKeyboardButton(text=_("common.to_orders"), callback_data="my_orders")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞
def get_contact_keyboard():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text=_("common.share_phone"), request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

# –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
def get_admin_keyboard():
    keyboard = [
        [InlineKeyboardButton(text=_("admin.products"), callback_data="admin_products")],
        [InlineKeyboardButton(text=_("admin.orders"), callback_data="admin_orders")],
        [InlineKeyboardButton(text=_("admin.all_orders"), callback_data="admin_all_orders")],
        [InlineKeyboardButton(text=_("admin.stats"), callback_data="admin_stats")],
        [InlineKeyboardButton(text=_("admin.broadcast"), callback_data="admin_broadcast")],
        [InlineKeyboardButton(text=_("common.main_menu"), callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ (–∞–¥–º–∏–Ω)
def get_admin_products_keyboard():
    keyboard = [
        [InlineKeyboardButton(text=_("admin.add_product"), callback_data="admin_add_product")],
        [InlineKeyboardButton(text=_("admin.edit_products"), callback_data="admin_edit_products")],
        [InlineKeyboardButton(text=_("admin.categories"), callback_data="admin_categories")],
        [InlineKeyboardButton(text=_("common.to_admin"), callback_data="admin_panel")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ (–∞–¥–º–∏–Ω)
def get_category_selection_keyboard(categories):
    keyboard = []
    for category in categories:
        emoji = category[2] if category[2] else "üì¶"
        keyboard.append([
            InlineKeyboardButton(
                text=f"{emoji} {category[1]}",
                callback_data=f"select_category_{category[0]}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text=_("common.to_products"), callback_data="admin_products")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (–∞–¥–º–∏–Ω)
def get_admin_categories_keyboard():
    keyboard = [
        [InlineKeyboardButton(text=_("admin.add_category"), callback_data="admin_add_category")],
        [InlineKeyboardButton(text=_("admin.edit_categories"), callback_data="admin_edit_categories")],
        [InlineKeyboardButton(text=_("common.to_products"), callback_data="admin_products")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ó–∞–∫–∞–∑—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
def get_admin_orders_keyboard(orders):
    keyboard = []
    
    for order in orders:
        order_id = order[0]
        user_id = order[1]
        status = order[8]
        total = order[3]
        
        status_emoji = {
            'waiting_payment': '‚è≥',
            'payment_check': 'üí∞'
        }
        
        keyboard.append([
            InlineKeyboardButton(
                text=f"{status_emoji.get(status, '‚ùì')} #{order_id} - {total}‚Çæ (ID: {user_id})",
                callback_data=f"admin_order_{order_id}"
            )
        ])
    
    keyboard.append([InlineKeyboardButton(text=_("common.to_admin"), callback_data="admin_panel")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫–∞–∑–æ–º (–∞–¥–º–∏–Ω)
def get_admin_order_actions_keyboard(order_id, status, from_all_orders=False):
    keyboard = []
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
    if status == 'payment_check':
        keyboard.append([InlineKeyboardButton(text=_("admin_actions.confirm_payment"), callback_data=f"admin_confirm_payment_{order_id}")])
        keyboard.append([InlineKeyboardButton(text=_("admin_actions.reject_payment"), callback_data=f"admin_reject_payment_{order_id}")])
    elif status == 'paid':
        keyboard.append([InlineKeyboardButton(text=_("admin_actions.mark_shipped"), callback_data=f"admin_ship_{order_id}")])
    elif status == 'shipping':
        keyboard.append([InlineKeyboardButton(text=_("admin_actions.mark_delivered"), callback_data=f"admin_deliver_{order_id}")])
    
    # –î–µ–π—Å—Ç–≤–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—Å–µ–≥–¥–∞ (–¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–æ–∫)
    if status != 'cancelled':
        keyboard.append([InlineKeyboardButton(text=_("admin_actions.cancel_order"), callback_data=f"admin_cancel_{order_id}")])
    
    # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤—Ä—É—á–Ω—É—é –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤
    if status in ['delivered', 'cancelled']:
        keyboard.append([InlineKeyboardButton(text=_("admin_actions.change_status"), callback_data=f"admin_change_status_{order_id}")])
    
    # –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞
    if from_all_orders:
        keyboard.append([InlineKeyboardButton(text=_("common.to_all_orders"), callback_data="admin_all_orders")])
    else:
        keyboard.append([InlineKeyboardButton(text=_("common.to_orders_admin"), callback_data="admin_orders")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–º–µ–Ω—ã —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
def get_change_status_keyboard(order_id):
    keyboard = [
        [InlineKeyboardButton(text="‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã", callback_data=f"set_status_waiting_payment_{order_id}")],
        [InlineKeyboardButton(text="üí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã", callback_data=f"set_status_payment_check_{order_id}")],
        [InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—á–µ–Ω", callback_data=f"set_status_paid_{order_id}")],
        [InlineKeyboardButton(text="üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω", callback_data=f"set_status_shipping_{order_id}")],
        [InlineKeyboardButton(text="‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω", callback_data=f"set_status_delivered_{order_id}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–µ–Ω", callback_data=f"set_status_cancelled_{order_id}")],
        [InlineKeyboardButton(text=_("common.back"), callback_data=f"admin_order_{order_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –í—ã–±–æ—Ä —è–∑—ã–∫–∞
def get_language_keyboard(user_id=None):
    keyboard = []
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —è–∑—ã–∫–æ–≤
    available_languages = i18n.i18n.get_available_languages()
    
    # –°–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–æ–≤ —è–∑—ã–∫–æ–≤ —Å –∫–ª—é—á–∞–º–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤
    language_mapping = {
        'ru': 'russian',
        'en': 'english'
    }
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ —è–∑—ã–∫–∞
    for lang_code in available_languages:
        language_key = language_mapping.get(lang_code)
        if language_key:
            button_text = _(f"language.{language_key}", user_id=user_id)
            callback_data = f"lang_{lang_code}"
            keyboard.append([InlineKeyboardButton(text=button_text, callback_data=callback_data)])
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    keyboard.append([InlineKeyboardButton(text=_("common.back", user_id=user_id), callback_data="back_to_menu")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –≤ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –∞–¥–º–∏–Ω—É
def get_payment_notification_keyboard(order_id):
    keyboard = [
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data=f"quick_confirm_{order_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"quick_reject_{order_id}")
        ],
        [InlineKeyboardButton(text="üìã –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞", callback_data=f"admin_order_{order_id}")],
        [InlineKeyboardButton(text="üìä –í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_orders")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –£–ª—É—á—à–µ–Ω–Ω–∞—è –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤
def get_enhanced_admin_keyboard():
    keyboard = [
        [
            InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_orders_new"),
            InlineKeyboardButton(text="üí∞ –ù–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ", callback_data="admin_orders_checking")
        ],
        [
            InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ", callback_data="admin_orders_paid"),
            InlineKeyboardButton(text="üöö –í –¥–æ—Å—Ç–∞–≤–∫–µ", callback_data="admin_orders_shipping")
        ],
        [
            InlineKeyboardButton(text="üì¶ –î–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ", callback_data="admin_orders_delivered"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–µ–Ω–Ω—ã–µ", callback_data="admin_orders_cancelled")
        ],
        [InlineKeyboardButton(text="üìã –í—Å–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_all_orders")],
        [InlineKeyboardButton(text="üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", callback_data="admin_products")],
        [InlineKeyboardButton(text="üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")],
        [InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")],
        [InlineKeyboardButton(text=_("common.main_menu"), callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –§–∏–ª—å—Ç—Ä –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å—É
def get_orders_filter_keyboard():
    keyboard = [
        [
            InlineKeyboardButton(text="üÜï –ù–æ–≤—ã–µ", callback_data="filter_waiting_payment"),
            InlineKeyboardButton(text="üí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞", callback_data="filter_payment_check")
        ],
        [
            InlineKeyboardButton(text="‚úÖ –û–ø–ª–∞—á–µ–Ω—ã", callback_data="filter_paid"),
            InlineKeyboardButton(text="üöö –î–æ—Å—Ç–∞–≤–∫–∞", callback_data="filter_shipping")
        ],
        [
            InlineKeyboardButton(text="üì¶ –ó–∞–≤–µ—Ä—à–µ–Ω—ã", callback_data="filter_delivered"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–µ–Ω—ã", callback_data="filter_cancelled")
        ],
        [InlineKeyboardButton(text="üìã –í—Å–µ", callback_data="filter_all")],
        [InlineKeyboardButton(text=_("common.to_admin"), callback_data="admin_panel")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)