from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from i18n import _

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
def get_main_menu(is_admin=False):
    keyboard_rows = [
        [KeyboardButton(text=_("menu.catalog")), KeyboardButton(text=_("menu.cart"))],
        [KeyboardButton(text=_("menu.orders")), KeyboardButton(text=_("menu.contact"))],
        [KeyboardButton(text=_("menu.info"))]
    ]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    if is_admin:
        keyboard_rows.append([KeyboardButton(text=_("menu.admin_panel"))])
    
    keyboard = ReplyKeyboardMarkup(
        keyboard=keyboard_rows,
        resize_keyboard=True,
        persistent=True
    )
    return keyboard

# –ö–∞—Ç–∞–ª–æ–≥ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
def get_categories_keyboard(categories):
    keyboard = []
    for category in categories:
        emoji = category[2] if category[2] else "üì¶"
        keyboard.append([
            InlineKeyboardButton(
                text=f"{emoji} {category[1]}",
                callback_data=f"category_{category[0]}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text=_("cart.back_to_menu"), callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ (inline)
def get_catalog_keyboard(products):
    keyboard = []
    for product in products:
        keyboard.append([
            InlineKeyboardButton(
                text=f"{product[1]} - {product[2]}‚Çæ",
                callback_data=f"product_{product[0]}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º", callback_data="catalog")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–æ–≤–∞—Ä–∞
def get_product_card_keyboard(product_id, in_cart=False):
    if in_cart:
        keyboard = [
            [
                InlineKeyboardButton(text="‚ûñ", callback_data=f"cart_decrease_{product_id}"),
                InlineKeyboardButton(text="‚ûï", callback_data=f"cart_increase_{product_id}")
            ],
            [InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", callback_data=f"cart_remove_{product_id}")],
            [InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="catalog")]
        ]
    else:
        keyboard = [
            [InlineKeyboardButton(text="üõí –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_to_cart_{product_id}")],
            [InlineKeyboardButton(text="üîô –ö –∫–∞—Ç–∞–ª–æ–≥—É", callback_data="catalog")]
        ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ö–æ—Ä–∑–∏–Ω–∞
def get_cart_keyboard(cart_items):
    keyboard = []
    
    for item in cart_items:
        product_id = item[0]
        quantity = item[1]
        name = item[2]
        keyboard.append([
            InlineKeyboardButton(text=f"‚ûñ", callback_data=f"cart_decrease_{product_id}"),
            InlineKeyboardButton(text=f"{name} ({quantity})", callback_data=f"product_{product_id}"),
            InlineKeyboardButton(text=f"‚ûï", callback_data=f"cart_increase_{product_id}")
        ])
        keyboard.append([
            InlineKeyboardButton(text=f"‚ùå –£–¥–∞–ª–∏—Ç—å", callback_data=f"cart_remove_{product_id}")
        ])
    
    if cart_items:
        keyboard.append([InlineKeyboardButton(text="üìù –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="checkout")])
        keyboard.append([InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", callback_data="clear_cart")])
    
    keyboard.append([InlineKeyboardButton(text=_("cart.back_to_menu"), callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –í—ã–±–æ—Ä –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏
def get_delivery_zones_keyboard():
    from config import DELIVERY_ZONES
    keyboard = []
    
    for zone_id, zone_info in DELIVERY_ZONES.items():
        keyboard.append([
            InlineKeyboardButton(
                text=f"{zone_info['name']} - {zone_info['price']}‚Çæ ({zone_info['time']})",
                callback_data=f"delivery_{zone_id}"
            )
        ])
    
    keyboard.append([InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="cart")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞
def get_order_confirmation_keyboard(order_id):
    keyboard = [
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏–ª(–∞)", callback_data=f"payment_done_{order_id}")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"cancel_order_{order_id}")],
        [InlineKeyboardButton(text="üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ó–∞–∫–∞–∑—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def get_orders_keyboard(orders):
    keyboard = []
    
    for order in orders:
        order_id = order[0]
        status = order[8]
        created_at = order[10]
        total = order[3]
        
        status_emoji = {
            'waiting_payment': '‚è≥',
            'payment_check': 'üí∞',
            'paid': '‚úÖ',
            'shipping': 'üöö',
            'delivered': '‚úÖ',
            'cancelled': '‚ùå'
        }
        
        status_text = {
            'waiting_payment': '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã',
            'payment_check': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã',
            'paid': '–û–ø–ª–∞—á–µ–Ω',
            'shipping': '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
            'delivered': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
            'cancelled': '–û—Ç–º–µ–Ω–µ–Ω'
        }
        
        keyboard.append([
            InlineKeyboardButton(
                text=f"{status_emoji.get(status, '‚ùì')} –ó–∞–∫–∞–∑ #{order_id} - {total}‚Çæ",
                callback_data=f"order_{order_id}"
            )
        ])
    
    keyboard.append([InlineKeyboardButton(text=_("cart.back_to_menu"), callback_data="back_to_menu")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
def get_order_details_keyboard(order_id, status):
    keyboard = []
    
    if status == 'waiting_payment':
        keyboard.append([InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏–ª(–∞)", callback_data=f"payment_done_{order_id}")])
        keyboard.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data=f"cancel_order_{order_id}")])
    elif status == 'payment_check':
        keyboard.append([InlineKeyboardButton(text="üì∏ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç –µ—â–µ —Ä–∞–∑", callback_data=f"resend_screenshot_{order_id}")])
    
    keyboard.append([InlineKeyboardButton(text="üîô –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ó–∞–ø—Ä–æ—Å –∫–æ–Ω—Ç–∞–∫—Ç–∞
def get_contact_keyboard():
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    return keyboard

# –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
def get_admin_keyboard():
    keyboard = [
        [InlineKeyboardButton(text="üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", callback_data="admin_products")],
        [InlineKeyboardButton(text="üìã –ù–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã", callback_data="admin_orders")],
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")],
        [InlineKeyboardButton(text="üì¢ –†–∞—Å—Å—ã–ª–∫–∞", callback_data="admin_broadcast")],
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_menu")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏ (–∞–¥–º–∏–Ω)
def get_admin_products_keyboard():
    keyboard = [
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä", callback_data="admin_add_product")],
        [InlineKeyboardButton(text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã", callback_data="admin_edit_products")],
        [InlineKeyboardButton(text="üè∑Ô∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏", callback_data="admin_categories")],
        [InlineKeyboardButton(text="üîô –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –í—ã–±–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ç–æ–≤–∞—Ä–∞ (–∞–¥–º–∏–Ω)
def get_category_selection_keyboard(categories):
    keyboard = []
    for category in categories:
        emoji = category[2] if category[2] else "üì¶"
        keyboard.append([
            InlineKeyboardButton(
                text=f"{emoji} {category[1]}",
                callback_data=f"select_category_{category[0]}"
            )
        ])
    keyboard.append([InlineKeyboardButton(text="üîô –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", callback_data="admin_products")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ (–∞–¥–º–∏–Ω)
def get_admin_categories_keyboard():
    keyboard = [
        [InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", callback_data="admin_add_category")],
        [InlineKeyboardButton(text="üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏", callback_data="admin_edit_categories")],
        [InlineKeyboardButton(text="üîô –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏", callback_data="admin_products")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –ó–∞–∫–∞–∑—ã –¥–ª—è –∞–¥–º–∏–Ω–∞
def get_admin_orders_keyboard(orders):
    keyboard = []
    
    for order in orders:
        order_id = order[0]
        user_id = order[1]
        status = order[8]
        total = order[3]
        
        status_emoji = {
            'waiting_payment': '‚è≥',
            'payment_check': 'üí∞'
        }
        
        keyboard.append([
            InlineKeyboardButton(
                text=f"{status_emoji.get(status, '‚ùì')} #{order_id} - {total}‚Çæ (ID: {user_id})",
                callback_data=f"admin_order_{order_id}"
            )
        ])
    
    keyboard.append([InlineKeyboardButton(text="üîô –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

# –î–µ–π—Å—Ç–≤–∏—è —Å –∑–∞–∫–∞–∑–æ–º (–∞–¥–º–∏–Ω)
def get_admin_order_actions_keyboard(order_id, status):
    keyboard = []
    
    if status == 'payment_check':
        keyboard.append([InlineKeyboardButton(text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"admin_confirm_payment_{order_id}")])
        keyboard.append([InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"admin_reject_payment_{order_id}")])
    elif status == 'paid':
        keyboard.append([InlineKeyboardButton(text="üöö –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ", callback_data=f"admin_ship_{order_id}")])
    elif status == 'shipping':
        keyboard.append([InlineKeyboardButton(text="‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ", callback_data=f"admin_deliver_{order_id}")])
    
    keyboard.append([InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data=f"admin_cancel_{order_id}")])
    keyboard.append([InlineKeyboardButton(text="üîô –ö –∑–∞–∫–∞–∑–∞–º", callback_data="admin_orders")])
    
    return InlineKeyboardMarkup(inline_keyboard=keyboard)