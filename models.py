"""
–ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Telegram –±–æ—Ç–∞
"""
from typing import NamedTuple, Optional, List, Dict, Any
from datetime import datetime
from decimal import Decimal


class User(NamedTuple):
    """–ú–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    user_id: int
    username: Optional[str]
    first_name: Optional[str]
    phone: Optional[str]
    address: Optional[str]
    created_at: datetime
    

class Category(NamedTuple):
    """–ú–æ–¥–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
    id: int
    name: str
    emoji: Optional[str]
    

class Product(NamedTuple):
    """–ú–æ–¥–µ–ª—å –ø—Ä–æ–¥—É–∫—Ç–∞"""
    id: int
    name: str
    price: Decimal
    description: Optional[str]
    photo: Optional[str]
    category_id: int
    stock: int
    

class CartItem(NamedTuple):
    """–≠–ª–µ–º–µ–Ω—Ç –∫–æ—Ä–∑–∏–Ω—ã"""
    product_id: int
    quantity: int
    name: str
    price: Decimal
    photo: Optional[str]
    

class Order(NamedTuple):
    """–ú–æ–¥–µ–ª—å –∑–∞–∫–∞–∑–∞"""
    id: int
    order_number: int
    user_id: int
    products: str  # JSON —Å—Ç—Ä–æ–∫–∞
    total_price: Decimal
    delivery_zone: str
    delivery_price: Decimal
    phone: str
    address: str
    status: str
    payment_screenshot: Optional[str]
    created_at: datetime
    
    @property
    def products_data(self) -> List[Dict[str, Any]]:
        """–ü–∞—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤"""
        import json
        return json.loads(self.products)


class OrderStatus:
    """–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤"""
    WAITING_PAYMENT = 'waiting_payment'
    PAYMENT_CHECK = 'payment_check'
    PAID = 'paid'
    SHIPPING = 'shipping'
    DELIVERED = 'delivered'
    CANCELLED = 'cancelled'
    
    STATUS_TEXTS = {
        WAITING_PAYMENT: '‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã',
        PAYMENT_CHECK: 'üí∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–ª–∞—Ç—ã',
        PAID: '‚úÖ –û–ø–ª–∞—á–µ–Ω, –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ',
        SHIPPING: 'üöö –û—Ç–ø—Ä–∞–≤–ª–µ–Ω',
        DELIVERED: '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω',
        CANCELLED: '‚ùå –û—Ç–º–µ–Ω–µ–Ω'
    }
    
    @classmethod
    def get_text(cls, status: str) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"""
        return cls.STATUS_TEXTS.get(status, status)