"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è
"""
import asyncio
from datetime import datetime, timezone, timedelta
from database import db, init_db

async def test_timezone_fix():
    """–¢–µ—Å—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞"""
    
    print("üåç –¢–µ—Å—Ç —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞ –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è...")
    
    await init_db()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –±–∞–∑–µ
    print("‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏:")
    db_time_result = await db.fetchone("SHOW timezone")
    print(f"–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å PostgreSQL: {db_time_result[0]}")
    
    db_time_result = await db.fetchone("SELECT CURRENT_TIMESTAMP as current_time")
    db_time = db_time_result['current_time']
    print(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ PostgreSQL: {db_time}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–∞
    test_user_id = 999999
    test_product_id = 1
    
    try:
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await db.add_user(test_user_id, "testuser", "Test User")
        
        # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
        await db.clear_cart(test_user_id)
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É
        success = await db.add_to_cart(test_user_id, test_product_id, 1)
        if success:
            print("‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è —Ä–µ–∑–µ—Ä–≤–∞
        cart_data = await db.fetchone("""
            SELECT reserved_until, 
                   CURRENT_TIMESTAMP as current_time,
                   EXTRACT(EPOCH FROM (reserved_until - CURRENT_TIMESTAMP))/60 as minutes_left
            FROM cart 
            WHERE user_id = $1
        """, test_user_id)
        
        if cart_data:
            print(f"üïê –†–µ–∑–µ—Ä–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: {cart_data['reserved_until']}")
            print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {cart_data['current_time']}")
            print(f"‚è± –û—Å—Ç–∞–ª–æ—Å—å –º–∏–Ω—É—Ç: {cart_data['minutes_left']:.1f}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é get_cart_expiry_time
            expiry_data = await db.get_cart_expiry_time(test_user_id)
            if expiry_data:
                print(f"‚úÖ get_cart_expiry_time —Ä–∞–±–æ—Ç–∞–µ—Ç: {expiry_data['minutes_left']} –º–∏–Ω—É—Ç")
                if expiry_data['minutes_left'] > 10:
                    print("‚úÖ –í—Ä–µ–º—è —Ä–µ–∑–µ—Ä–≤–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ (–±–æ–ª—å—à–µ 10 –º–∏–Ω—É—Ç)")
                else:
                    print("‚ö†Ô∏è –í—Ä–µ–º—è —Ä–µ–∑–µ—Ä–≤–∞ –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω–æ –º–∞–ª–æ")
            else:
                print("‚ùå get_cart_expiry_time –Ω–µ –≤–µ—Ä–Ω—É–ª–∞ –¥–∞–Ω–Ω—ã–µ")
        else:
            print("‚ùå –î–∞–Ω–Ω—ã–µ –æ —Ä–µ–∑–µ—Ä–≤–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        await db.clear_cart(test_user_id)
        print("üßπ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
    
    finally:
        await db.close_pool()

if __name__ == "__main__":
    asyncio.run(test_timezone_fix())